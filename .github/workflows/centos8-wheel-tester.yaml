name: Centos8 Wheel Tester
on:
  push:
    branches:
      - master
  schedule:
    # Run nightly
    - cron: '0 0 * * *'

jobs:
  centos8_test:
    runs-on: [self-hosted, linux, ARM64, centos8]
    container: centos:8
    strategy:
      fail-fast: false
      matrix:
        WHEEL:
          - PIP_NAME: numpy
            PKG_TEST: import numpy
          - PIP_NAME: bcrypt
            PKG_TEST: import bcrypt
          - PIP_NAME: pymongo
            PKG_TEST: |
              import pymongo
              import pymongo.message
          - PIP_NAME: lxml
            PKG_TEST: |
              import lxml._elementpath
              import lxml.builder
              import lxml.objectify
              import lxml.etree
              import lxml.sax
          - PIP_NAME: lazy-object-proxy
            PKG_TEST: import lazy_object_proxy
          - PIP_NAME: simplejson
            PKG_TEST: |
              import simplejson
              simplejson._speedups
          - PIP_NAME: Pillow
            PKG_TEST: |
              import PIL
              import PIL._imagingcms
              import PIL._imaging
              import PIL._imagingft
              import PIL._imagingmath
              import PIL._imagingmorph
          - PIP_NAME: kiwisolver
            PKG_TEST: import kiwisolver
          - PIP_NAME: cffi
            PKG_TEST: |
              import cffi
              ffi = cffi.FFI()
              a = ffi.new('int[4]')
              print(a)
          - PIP_NAME: cffi==1.14.3
            PKG_TEST: |
              import cffi
              ffi = cffi.FFI()
              a = ffi.new('int[4]')
              print(a)
          - PIP_NAME: cryptography
            PKG_TEST: |
              from cryptography.hazmat.backends.openssl.backend import backend
              print('Loaded: ' + backend.openssl_version_text())
              print('Linked Against: ' + backend._ffi.string(backend._lib.OPENSSL_VERSION_TEXT).decode('ascii'))
          - PIP_NAME: sqlalchemy
            PKG_TEST: import sqlalchemy
          - PIP_NAME: ujson
            PKG_TEST: import ujson
          - PIP_NAME: scikit-build cmake
            PKG_TEST: |
              import skbuild
              skbuild.cmaker.get_cmake_version()
          - PIP_NAME: pycryptodome
            PKG_TEST: import Crypto
          - PIP_NAME: pycryptodomex
            PKG_TEST: import Cryptodome
          - PIP_NAME: pandas
            PKG_TEST: import pandas
          - PIP_NAME: pywavelets
            PKG_TEST: import pywt
          - PIP_NAME: ijson
            PKG_TEST: |
              import ijson
              ijson.parse('{ "name":"John", "age":30, "city":"New York"}')
    name: "Centos8 for ${{ matrix.WHEEL.PIP_NAME }}"
    steps:
      - run: yum install -y python3-pip
      - run: python3 -m pip install --upgrade pip
      - run: python3 -m pip install ${{ matrix.WHEEL.PIP_NAME }}
      - run: echo "${{ matrix.WHEEL.PKG_TEST }}" | python3
